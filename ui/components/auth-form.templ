package components

templ AuthForm(newUser bool) {
  <form id="auth-form">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username">
    <br>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password">
    if newUser {
      <label for="confirm-password">Confirm Password:</label>
      <input type="password" id="confirm-password" name="confirm-password">
      <br>
      <button type="submit">Register</button>
    } else {
      <button type="submit">Sign In</button>
    }
  </form>

  <div id="error-container">
    <p id="message"></p>
  </div>

  <script>
    document.getElementById("auth-form").addEventListener("submit", async function(event) {
      event.preventDefault(); // Prevent default form submission

      let urlString;
      let redirectString = "/";

      const username = document.getElementById("username").value;
      const password = document.getElementById("password").value;
      // If #confirm-password exists, get its value, otherwise set to ""
      const confirmPassword = document.getElementById("confirm-password")?.value || "";
      if (confirmPassword) {
        if (password !== confirmPassword) {
          document.getElementById("message").textContent = "Passwords don't match - try again.";
          return;
        }
        urlString = "/register";
      } else {
        urlString = "/sign-in"
      }

      const res = await fetch(urlString, {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "Accept": "application/json"
        },
        body: JSON.stringify({ username, password })
      });

      if (res.redirected) {
        // Get the redirect URL from the Location header
        let redirectUrl = res.url;
        // Redirect the user manually
        window.location.href = redirectUrl;
        return;
      }

      let j = await res.json();

      // Check if response is OK (status 200-299)
      if (res.ok) {
        console.log('Successfully logged in.');
      } else {
        // If it's not a redirect or successful response, check for JSON error
        console.error('Login error:', j.error);
        // TODO: Convert to templ component which is retrieved via HTMX
        if (typeof j.error === "string") {
          document.getElementById("message").textContent = j.error;
        }
        if (typeof j.error === "object") {
          const errorContainer = document.getElementById("error-container");
          errorContainer.innerHTML = "<ul class='error-list'></ul>";
          const ul = errorContainer.querySelector("ul");

          Object.entries(j.error).forEach(([key, value]) => {
              const li = document.createElement("li");
              li.innerHTML = `<span class="error-text">${key}</span>: ${value}`;
              ul.appendChild(li);
          });
        }
        // alert('Login failed: ' + j.error);
      }
      if (j.redirect) {
        window.location.href = j.redirect;
      }

      // if (response.ok) {
      //   window.location.href = redirectString; // Redirect to appropriate page
      // } else {
      //   const errorMessage = await response.text();
      //   document.getElementById("message").textContent = errorMessage;
      // }
    });
  </script>
}