package components

templ AuthForm(newUser bool) {
  <form id="auth-form">
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required>
    <br>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required>
    if newUser {
      <label for="confirm-password">Confirm Password:</label>
      <input type="password" id="confirm-password" name="confirm-password" required>
      <br>
      <button type="submit">Register</button>
    } else {
      <button type="submit">Sign In</button>
    }
  </form>

  <p id="message"></p>

  <script>
    document.getElementById("auth-form").addEventListener("submit", async function(event) {
      event.preventDefault(); // Prevent default form submission

      let urlString;
      let redirectString = "/";

      const username = document.getElementById("username").value;
      const password = document.getElementById("password").value;
      // If #confirm-password exists, get its value, otherwise set to ""
      const confirmPassword = document.getElementById("confirm-password")?.value || "";
      if (confirmPassword) {
        if (password !== confirmPassword) {
          document.getElementById("message").textContent = "Passwords don't match - try again.";
          return;
        }
        urlString = "/register";
      } else {
        urlString = "/sign-in"
      }

      const response = await fetch(urlString, {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ username, password })
      });

      if (response.ok) {
        window.location.href = redirectString; // Redirect to appropriate page
      } else {
        const errorMessage = await response.text();
        document.getElementById("message").textContent = errorMessage;
      }
    });
  </script>
}