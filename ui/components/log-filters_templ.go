// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"slices"
	"sort"
	"strconv"

	"github.com/mjefferson-whs/listener/internal/data"
)

func LogFilters(logsMetadata *data.LogsMetadata, filters data.Filters) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)

		type levelMeta struct {
			Level string
			Count int
		}
		var levelMetas []levelMeta
		for level, count := range logsMetadata.Levels {
			levelMetas = append(levelMetas, levelMeta{Level: level, Count: count})
		}
		// Sort by count in descending order
		sort.Slice(levelMetas, func(i, j int) bool {
			return levelMetas[i].Count > levelMetas[j].Count
		})

		type userMeta struct {
			UserID int
			Count  int
		}
		var userMetas []userMeta
		for id, count := range logsMetadata.Users {
			userMetas = append(userMetas, userMeta{UserID: id, Count: count})
		}
		// Sort by user ID in ascending order
		sort.Slice(userMetas, func(i, j int) bool {
			return userMetas[i].UserID < userMetas[j].UserID
		})
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"filter-controls\"><div class=\"level-filters\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, l := range levelMetas {
			if slices.Contains(filters.LogFilters.Level, l.Level) {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<button class=\"filter-button level-filter active\" data-filter=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var2 string
				templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(l.Level)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/log-filters.templ`, Line: 45, Col: 81}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(l.Level + " (" + strconv.Itoa(l.Count) + ")")
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/log-filters.templ`, Line: 45, Col: 130}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<button class=\"filter-button level-filter\" data-filter=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(l.Level)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/log-filters.templ`, Line: 47, Col: 74}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(l.Level + " (" + strconv.Itoa(l.Count) + ")")
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/log-filters.templ`, Line: 47, Col: 123}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div><div class=\"user-filters\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, u := range userMetas {
			if slices.Contains(filters.LogFilters.UserID, u.UserID) {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<button class=\"filter-button user_id-filter active\" data-filter=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var6 string
				templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(u.UserID))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/log-filters.templ`, Line: 54, Col: 98}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var7 string
				templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs("User ID " + strconv.Itoa(u.UserID) + " (" + strconv.Itoa(u.Count) + ")")
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/log-filters.templ`, Line: 54, Col: 176}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "<button class=\"filter-button user_id-filter\" data-filter=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var8 string
				templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(u.UserID))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/log-filters.templ`, Line: 56, Col: 91}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var9 string
				templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs("User ID " + strconv.Itoa(u.UserID) + " (" + strconv.Itoa(u.Count) + ")")
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/log-filters.templ`, Line: 56, Col: 169}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</button>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "</div><div class=\"search-bar\"><form id=\"search-form\"><input type=\"text\" name=\"message-search-bar\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var10 string
		templ_7745c5c3_Var10, templ_7745c5c3_Err = templ.JoinStringErrs(filters.LogFilters.Message)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/log-filters.templ`, Line: 63, Col: 86}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var10))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, "\" id=\"message-search-bar\" placeholder=\"Search messages...\"> <input type=\"submit\" value=\"SEARCH\"></form></div><button id=\"clear-filters-button\">CLEAR FILTERS</button></div><script>\n    function getFilteredLogs() {\n      let activeFilters = {\n        \"level\": [],\n        \"user_id\": [],\n        \"message\": \"\"\n      }\n\n      document.querySelectorAll(\".filter-button.level-filter.active\").forEach(button => {\n        activeFilters[\"level\"].push(button.getAttribute(\"data-filter\"));\n      });\n      document.querySelectorAll(\".filter-button.user_id-filter.active\").forEach(button => {\n        activeFilters[\"user_id\"].push(button.getAttribute(\"data-filter\"));\n      });\n      activeFilters[\"message\"] = document.getElementById(\"message-search-bar\").value;\n\n      // sessionStorage.setItem(\"activeFilters\", JSON.stringify(activeFilters));\n\n      let params = new URLSearchParams();\n      // Adding params in this way ensures that with multiple level params, it will be \"level=INFO&level=ERROR\" rather than \"level=INFO,ERROR\" - this makes it much easier for the echo router to pick out these params\n      if (activeFilters[\"level\"].length > 0) {\n        activeFilters[\"level\"].forEach(p => {\n          params.append(\"level\", p);\n        });\n      }\n      if (activeFilters[\"user_id\"].length > 0) {\n        activeFilters[\"user_id\"].forEach(p => {\n          params.append(\"user_id\", p);\n        });\n      }\n      if (activeFilters[\"message\"] !== \"\") {\n        params.append(\"message\", activeFilters[\"message\"]);\n      }\n\n      if (params.toString()) {\n        window.location.href = \"/logs?\" + params.toString();\n      } else {\n        window.location.href = \"/logs\";\n      }\n      // let res = await fetch(\"/logs?\" + params.toString());\n      // if (res.ok) {\n      //   window.location.href = \"/logs?\" + params.toString();\n      // } else {\n      //   console.log(res);\n      // }\n      // htmx.ajax(\"GET\", \"/logs?\" + params.toString(), { target: \"#logs-container\", pushURL: true });\n    }\n\n    document.querySelectorAll(\".filter-button\").forEach(button => {\n      button.addEventListener(\"click\", () => {\n        button.classList.toggle(\"active\");\n\n        getFilteredLogs();\n      });\n    });\n\n    document.getElementById(\"search-form\").addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      getFilteredLogs();\n    });\n\n    document.getElementById(\"clear-filters-button\").addEventListener(\"click\", () => {\n      window.location.href = \"/logs\";\n    });\n  </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
