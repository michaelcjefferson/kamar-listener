package components

templ MkCertInstructions() {
  <div class="mkcert-instructions">
		<h3>Setting Up SSL Certificates with mkcert</h3>
		
		<div class="intro">
			<p>
				To enable secure HTTPS connections, you'll need to generate SSL certificates using mkcert.
				Follow the instructions below for your operating system.
			</p>
		</div>

		<div class="tabs">
			<div class="tab-buttons">
				<button 
					class="tab-button active" 
					onclick="showTab('windows')" 
					id="windows-tab-btn">
					Windows
				</button>
				<button 
					class="tab-button" 
					onclick="showTab('mac')" 
					id="mac-tab-btn">
					macOS
				</button>
				<button 
					class="tab-button" 
					onclick="showTab('linux')" 
					id="linux-tab-btn">
					Linux
				</button>
			</div>

			<div id="windows-tab" class="tab-content active">
				<h2>Installing mkcert on Windows</h2>
				
				<div class="steps">
					<div class="step">
						<h3>Step 1: Install mkcert using chocolatey</h3>
						<p>If you don't have chocolatey installed, <a href="https://chocolatey.org/install" target="_blank">install it first</a>.</p>
						<div class="code-block">
							<code>choco install mkcert</code>
						</div>
						<p class="note">Alternative: <a href="https://github.com/FiloSottile/mkcert/releases" target="_blank">Download the latest release</a> and place the executable in your PATH.</p>
					</div>

					<div class="step">
						<h3>Step 2: Install the local CA</h3>
						<p>Open Command Prompt as Administrator and run:</p>
						<div class="code-block">
							<code>mkcert -install</code>
						</div>
						<div class="image-container">
							<img src="/api/placeholder/600/350" alt="Windows mkcert install prompt" />
						</div>
					</div>

					<div class="step">
						<h3>Step 3: Generate certificates</h3>
						<p>Navigate to your application directory and run:</p>
						<div class="code-block">
							<code>mkcert localhost 127.0.0.1 ::1</code>
						</div>
						<p>This will create two files: <code>localhost+2.pem</code> and <code>localhost+2-key.pem</code></p>
					</div>

					<div class="step">
						<h3>Step 4: Configure the application</h3>
						<p>Place both certificate files in the same directory as your application or in the directory specified in your application's configuration.</p>
					</div>
				</div>
			</div>

			<div id="mac-tab" class="tab-content">
				<h2>Installing mkcert on macOS</h2>
				
				<div class="steps">
					<div class="step">
						<h3>Step 1: Install mkcert using Homebrew</h3>
						<div class="code-block">
							<code>brew install mkcert</code>
						</div>
						<p>For Firefox support, also run: <code>brew install nss</code></p>
					</div>

					<div class="step">
						<h3>Step 2: Install the local CA</h3>
						<div class="code-block">
							<code>mkcert -install</code>
						</div>
						<div class="image-container">
							<img src="/api/placeholder/600/300" alt="macOS mkcert install output" />
						</div>
					</div>

					<div class="step">
						<h3>Step 3: Generate certificates</h3>
						<p>Navigate to your application directory and run:</p>
						<div class="code-block">
							<code>mkcert localhost 127.0.0.1 ::1</code>
						</div>
						<p>This will create two files: <code>localhost+2.pem</code> and <code>localhost+2-key.pem</code></p>
					</div>

					<div class="step">
						<h3>Step 4: Configure the application</h3>
						<p>Place both certificate files in the same directory as your application or in the directory specified in your application's configuration.</p>
					</div>
				</div>
			</div>

			<div id="linux-tab" class="tab-content">
				<h2>Installing mkcert on Linux</h2>
				
				<div class="steps">
					<div class="step">
						<h3>Step 1: Install mkcert</h3>
						<p>For Ubuntu/Debian:</p>
						<div class="code-block">
							<code>sudo apt install libnss3-tools</code><br/>
							<code>wget -O mkcert https://github.com/FiloSottile/mkcert/releases/download/v1.4.4/mkcert-v1.4.4-linux-amd64</code><br/>
							<code>chmod +x mkcert</code><br/>
							<code>sudo mv mkcert /usr/local/bin/</code>
						</div>
						
						<p>For Fedora:</p>
						<div class="code-block">
							<code>sudo dnf install nss-tools</code><br/>
							<code>wget -O mkcert https://github.com/FiloSottile/mkcert/releases/download/v1.4.4/mkcert-v1.4.4-linux-amd64</code><br/>
							<code>chmod +x mkcert</code><br/>
							<code>sudo mv mkcert /usr/local/bin/</code>
						</div>
						
						<p>For Arch Linux:</p>
						<div class="code-block">
							<code>sudo pacman -S nss</code><br/>
							<code>sudo pacman -S mkcert</code>
						</div>
					</div>

					<div class="step">
						<h3>Step 2: Install the local CA</h3>
						<div class="code-block">
							<code>mkcert -install</code>
						</div>
					</div>

					<div class="step">
						<h3>Step 3: Generate certificates</h3>
						<p>Navigate to your application directory and run:</p>
						<div class="code-block">
							<code>mkcert localhost 127.0.0.1 ::1</code>
						</div>
						<p>This will create two files: <code>localhost+2.pem</code> and <code>localhost+2-key.pem</code></p>
					</div>

					<div class="step">
						<h3>Step 4: Configure the application</h3>
						<p>Place both certificate files in the same directory as your application or in the directory specified in your application's configuration.</p>
					</div>
				</div>
			</div>
		</div>

		<div class="troubleshooting">
			<h3>Troubleshooting</h3>
			<ul>
				<li>If you see certificate errors in your browser, make sure you've completed the <code>mkcert -install</code> step.</li>
				<li>Ensure the certificate file names match what your application is expecting.</li>
				<li>Try restarting your browser after installing the CA.</li>
				<li>For Firefox: you may need to manually import the CA or install NSS tools as shown in the instructions.</li>
			</ul>
		</div>
  </div>

  <script>
    function showTab(tabName) {
      // Hide all tab contents
      document.querySelectorAll('.tab-content').forEach(tab => {
        tab.classList.remove('active');
      });
      
      // Show the selected tab
      document.getElementById(tabName + '-tab').classList.add('active');
      
      // Update button styles
      document.querySelectorAll('.tab-button').forEach(btn => {
        btn.classList.remove('active');
      });
      document.getElementById(tabName + '-tab-btn').classList.add('active');
    }
  </script>
}